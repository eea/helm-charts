{{- if and .Values.addKibana .Values.kibana.ingress.enabled -}}
{{- $fullName := include "appl.fullname" . -}}
{{- $svcPort := .Values.kibana.service.port -}}
{{- if and .Values.kibana.ingress.className (not (hasKey .Values.kibana.ingress.annotations "kubernetes.io/ingress.class")) }}
  {{- $_ := set .Values.kibana.ingress.annotations "kubernetes.io/ingress.class" .Values.kibana.ingress.className}}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ .Release.Name }}-kibana
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: kibana
  {{- with .Values.kibana.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.kibana.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.kibana.ingress.className }}
  {{- end }}
  {{- if .Values.kibana.ingress.tls }}
  tls:
    {{- range .Values.kibana.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    - host: {{ $.Values.kibana.ingress.hostname | quote }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $.Release.Name }}-kibana
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $.Release.Name }}-kibana
              servicePort: {{ $svcPort }}
              {{- end }}
{{- end }}
