image:
  repository: eeacms/reportek-cdr
  pullPolicy: IfNotPresent
  tag: ""

timezone: Europe/Copenhagen
# used by the cron-zeopack job
cdrUser: admin
cdrPass: admin

instance:
  enabled: true
  repository: eeacms/reportek-cdr
  tag: ""
  replicaCount: 2
  port: 8080
  resources:
    requests:
      memory: 2Gi
    limits:
      memory: 2Gi
  env:
    beakerPath: /sessions
    beakerSecret: replaceme
    sentryDSN: replaceme
    zopeThreads: 4
    deploymentHost: cdrdev.eionet.europa.eu
    cachePurgingDomain: cdrdev.eionet.europa.eu
    cachePurgingEnabled: false
    cachePurgingProxy: http://varnish
    cachePurgingProxyPort: 6081
    cachePurgingVhost: false
    cacheSettingsEnabled: false
    clamavHost: clamav-rest
    graylog: logs.apps.eea.europa.eu:12201
    graylogFacility: cdrdev-instance
    rabbitmqEnabled: false
    rabbitmqHost: rabbitmq
    rabbitmqUser: replaceme
    rabbitmqPass: replaceme
    rabbitmqPort: 5672
    zipCacheEnabled: true
    zipCachePath: /opt/zope/var
    zipCacheThreshold: "100000000"
    zeoAddress: zeoserver:8100

clamav:
  enabled: true
  repository: tiredofit/clamav
  tag: 2.6.16
  replicaCount: 1
  port: 3310
  env:
    maxFileSize: "2147483648"
    maxScanSize: "2147483648"
    streamMaxLength: "2147483648"
  resources:
    requests:
      memory: 3.5Gi
    limits:
      memory: 3.5Gi

varnish:
  enabled: true
  repository: eeacms/reportek-varnish
  tag: 2.0-1.1
  replicaCount: 1
  port: 6081
  resources:
    requests:
      memory: 5Gi
    limits:
      memory: 5Gi
  env:
    varnishBackend: "instance"
    varnishBackendPort: 8080
    # VARNISH_HTTP_PORT: 6081. Commented out since we'll be using the value from port (6081)
    varnishAutokillCron: "0 2 * * *"

localconverters:
  enabled: true
  repository: eeacms/reportek-local-converters
  tag: 3.0.7
  replicaCount: 1
  port: 5000
  resources:
    requests:
      memory: 1.5Gi
    limits:
      memory: 1.5Gi

cronzeopack:
  enabled: true
  repository: curlimages/curl
  tag: 8.4.0
  schedule: "0 3 * * *"
  resources:
    requests:
      memory: 16Mi
    limits:
      memory: 16Mi

zeoserver:
  enabled: true
  repository: eeacms/reportek.zeoserver
  tag: 1.1.1
  replicaCount: 1
  port: 8100
  resources:
    requests:
      memory: 1Gi
    limits:
      memory: 2Gi

cronsessionscleanup:
  enabled: true
  schedule: "*/10 * * * *"
  resources:
    requests:
      memory: 16Mi
    limits:
      memory: 16Mi

cronautoenvcleanup:
  enabled: true
  schedule: "*/10 * * * *"
  resources:
    requests:
      memory: 1.5Gi
    limits:
      memory: 1.5Gi

cronautofallin:
  enabled: true
  schedule: "*/5 * 16 11 *"
  resources:
    requests:
      memory: 1.5Gi
    limits:
      memory: 1.5Gi

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8080

cron:
  enabled: true

webforms:
  - name: webforms
    enabled: false
    service:
      name: webforms-external
      externalName: webforms.eionet.europa.eu
      port: 443
    ingress:
      path: /webforms(/|$)(.*)
      pathType: ImplementationSpecific
      rewriteTarget: /$2
      proxyBodySize: "10m"
      proxyReadTimeout: "60"
      proxySendTimeout: "60"
      backendProtocol: "HTTPS"
      sslVerify: true
      headers:
        host: webforms.eionet.europa.eu
        addXClientIP: true
        addXForwardedHost: true

ingress:
  enabled: false
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "480"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /VirtualHostBase/https/cdrdev.eionet.europa.eu:443/VirtualHostRoot/$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers 'X-Frame-Options: SAMEORIGIN'
       'Strict-Transport-Security max-age=15768000'
       'Server HTTPS'
       'X-Content-Type-Options: nosniff'
       'Referrer-Policy strict-origin-when-cross-origin'
       "Feature-Policy accelerometer 'none'; ambient-light-sensor 'none'; autoplay 'none'; camera 'none'; encrypted-media 'none'; fullscreen 'self'; geolocation 'none'; gyroscope 'none'; magnetometer 'none'; microphone 'none'; midi 'none'; payment 'none'; picture-in-picture 'none'; speaker 'none'; sync-xhr 'self'; usb 'none'; vr 'none'"
       "X-XSS-Protection 1; mode=block'"
       "Content-Security-Policy default-src 'self' blob: data: https://*.eea.europa.eu https://*.eionet.europa.eu; connect-src 'self' https://*.openstreetmap.org https://*.eea.europa.eu https://*.eionet.europa.eu http://*.eea.europa.eu; font-src 'self' data: https://cdnjs.cloudflare.com/ https://fonts.gstatic.com/ https://*.eea.europa.eu https://*.eionet.europa.eu; frame-src 'self'  https://ec.europa.eu/  https://*.eea.europa.eu https://*.eionet.europa.eu http://*.eea.europa.eu; img-src http: https: blob: data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob: data: https://matomo.eea.europa.eu https://openlayers.org/ https://www.google.com/jsapi https://www.google.com/uds/ https://www.gstatic.com/ https://spreadsheets.google.com/ https://docs.google.com/ https://*.eea.europa.eu https://*.eionet.europa.eu http://*.eea.europa.eu https://cdnjs.cloudflare.com https://code.jquery.com; style-src 'self' 'unsafe-inline' https://openlayers.org/ https://www.google.com/uds/ https://ajax.googleapis.com/ https://www.gstatic.com/ https://*.eionet.europa.eu https://*.eea.europa.eu https://cdnjs.cloudflare.com https://code.jquery.com";

  hosts:
    - host: cdrdev.eionet.europa.eu
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - cdrdev.eionet.europa.eu

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 4
  #targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}
