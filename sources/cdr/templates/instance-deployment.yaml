apiVersion: apps/v1
kind: Deployment
metadata:
  name: instance
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: instance
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.instance.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      component: instance
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        component: instance
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}

      containers:
      - name: instance
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}

        ports:
        - containerPort: {{ .Values.instance.port }}
          name: http
          protocol: TCP

        env:
        - name: BEAKER_PATH
          value: "{{ .Values.instance.env.beakerPath }}"
        - name: BEAKER_SECRET
          value: "{{ .Values.instance.env.beakerSecret }}"
        - name: CACHE_PURGING_DOMAIN
          value: "{{ .Values.instance.env.cachePurgingDomain }}"
        - name: CACHE_PURGING_ENABLED
          value: "{{ .Values.instance.env.cachePurgingEnabled }}"
        - name: CACHE_PURGING_PROXY
          value: "{{ .Values.instance.env.cachePurgingProxy }}"
        - name: CACHE_PURGING_PROXY_PORT
          value: "{{ .Values.instance.env.cachePurgingProxyPort }}"
        - name: CACHE_PURGING_VHOST
          value: "{{ .Values.instance.env.cachePurgingVhost }}"
        - name: CACHE_SETTINGS_ENABLED
          value: "{{ .Values.instance.env.cacheSettingsEnabled }}"
        - name: CLAMAV_HOST
          value: "{{ .Values.instance.env.clamavHost }}"
        - name: GRAYLOG
          value: "{{ .Values.instance.env.graylog }}"
        - name: GRAYLOG_FACILITY
          value: "{{ .Values.instance.env.graylogFacility }}"
        - name: RABBITMQ_ENABLED
          value: "{{ .Values.instance.env.rabbitmqEnabled }}"
        - name: RABBITMQ_HOST
          value: "{{ .Values.instance.env.rabbitmqHost }}"
        - name: RABBITMQ_PASS
          value: "{{ .Values.instance.env.rabbitmqPass }}"
        - name: RABBITMQ_PORT
          value: "{{ .Values.instance.env.rabbitmqPort }}"
        - name: RABBITMQ_USER
          value: "{{ .Values.instance.env.rabbitmqUser }}"
        - name: SENTRY_DSN
          value: "{{ .Values.instance.env.sentryDSN }}"
        - name: TZ
          value: {{ .Values.timezone }}
        - name: ZEO_ADDRESS
          value: "{{ .Values.instance.env.zeoAddress }}"
        - name: ZIP_CACHE_ENABLED
          value: "{{ .Values.instance.env.zipCacheEnabled }}"
        - name: ZIP_CACHE_PATH
          value: "{{ .Values.instance.env.zipCachePath }}"
        - name: ZIP_CACHE_THRESHOLD
          value: "{{ .Values.instance.env.zipCacheThreshold }}"
        - name: ZOPE_THREADS
          value: "{{ .Values.instance.env.zopeThreads }}"

        volumeMounts:
          - mountPath: /opt/zope/var/zip_cache
            name: {{ .Values.deployment }}-zipcache-storage
          - mountPath: /sessions
            name: {{ .Values.deployment }}-sessions-storage
          - mountPath: /tmp
            name: {{ .Values.deployment }}-tmpdir-storage

        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.instance.port }}
          initialDelaySeconds: 30
          periodSeconds: 20
          failureThreshold: 3
          timeoutSeconds: 6

        resources:
          {{- toYaml .Values.instance.resources | nindent 10 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      restartPolicy: Always
      volumes:
        - name: {{ .Values.deployment }}-zipcache-storage
          persistentVolumeClaim:
            claimName: {{ .Values.deployment }}-zipcache-storage
        - name: {{ .Values.deployment }}-sessions-storage
          persistentVolumeClaim:
            claimName: {{ .Values.deployment }}-sessions-storage
        - name: {{ .Values.deployment }}-tmpdir-storage
          persistentVolumeClaim:
            claimName: {{ .Values.deployment }}-tmpdir-storage
