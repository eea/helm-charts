apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "appl.fullname" . }}-instance
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    app.kubernetes.io/component: zope
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.instance.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: zope
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: zope
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}
      {{- if .Values.instance.env.blobStorageCacheVolumeEnabled }}
      initContainers:
      - name: init-blobstorage
        image: busybox:stable
        command:
          [
            "sh",
            "-c",
            "mkdir -p /blobstorage && chown -R 500:500 /blobstorage",
          ]
        volumeMounts:
        - name: blobstorage
          mountPath: /blobstorage
          subPath: blobstorage
      {{- end }}
      containers:
      - name: {{ include "appl.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}

        ports:
        - containerPort: {{ .Values.instance.port }}
          name: http
          protocol: TCP

        env:
        - name: BEAKER_PATH
          value: '{{ .Values.instance.env.beakerPath }}'
        - name: BEAKER_SECRET
          value: '{{ .Values.instance.env.beakerSecret }}'
        - name: CACHE_PURGING_DOMAIN
          value: '{{ .Values.instance.env.cachePurgingDomain }}'
        - name: CACHE_PURGING_ENABLED
          value: '{{ .Values.instance.env.cachePurgingEnabled }}'
        - name: CACHE_PURGING_PROXY
          value: '{{ .Values.instance.env.cachePurgingProxy }}'
        - name: CACHE_PURGING_PROXY_PORT
          value: '{{ .Values.instance.env.cachePurgingProxyPort }}'
        - name: CACHE_PURGING_VHOST
          value: '{{ .Values.instance.env.cachePurgingVhost }}'
        - name: CACHE_SETTINGS_ENABLED
          value: '{{ .Values.instance.env.cacheSettingsEnabled }}'
        - name: CLAMAV_HOST
          value: '{{ .Values.instance.env.clamavHost }}'
        - name: GRAYLOG
          value: '{{ .Values.instance.env.graylog }}'
        - name: GRAYLOG_FACILITY
          value: '{{ .Values.instance.env.graylogFacility }}'
        - name: RABBITMQ_ENABLED
          value: '{{ .Values.instance.env.rabbitmqEnabled }}'
        - name: RABBITMQ_HOST
          value: '{{ .Values.instance.env.rabbitmqHost }}'
        - name: RABBITMQ_PASS
          value: '{{ .Values.instance.env.rabbitmqPass }}'
        - name: RABBITMQ_PORT
          value: '{{ .Values.instance.env.rabbitmqPort }}'
        - name: RABBITMQ_USER
          value: '{{ .Values.instance.env.rabbitmqUser }}'
        - name: SENTRY_DSN
          value: '{{ .Values.instance.env.sentryDSN }}'
        - name: SENTRY_SITE
          value: '{{ .Values.instance.env.sentrySite }}'
        - name: SENTRY_ENVIRONMENT
          value: '{{ .Values.instance.env.sentryEnvironment }}'
        - name: SENTRY_RELEASE
          value: '{{ include "appl.chart" . }}:{{ .Chart.AppVersion }}'
        - name: TZ
          value: {{ .Values.timezone }}
        - name: ZEO_ADDRESS
          value: '{{ .Values.instance.env.zeoAddress }}'
        - name: ZIP_CACHE_ENABLED
          value: '{{ .Values.instance.env.zipCacheEnabled }}'
        - name: ZIP_CACHE_PATH
          value: '{{ .Values.instance.env.zipCachePath }}'
        - name: ZIP_CACHE_THRESHOLD
          value: '{{ .Values.instance.env.zipCacheThreshold }}'
        - name: ZOPE_THREADS
          value: '{{ .Values.instance.env.zopeThreads }}'
        - name: LOCAL_CONVERTERS_HOST
          value: '{{ .Values.instance.env.localConvertersHost }}'

        volumeMounts:
        {{- if .Values.instance.env.zipCacheEnabled }}
          - mountPath: /opt/zope/var/zip_cache
            name: {{ include "appl.fullname" . }}-zipcache-storage
        {{- end }}
        {{- if .Values.instance.env.blobStorageCacheVolumeEnabled }}
          - mountPath: /opt/zope/var/blobstorage
            name: blobstorage
            subPath: blobstorage
        {{- end }}
          - mountPath: /sessions
            name: {{ include "appl.fullname" . }}-sessions-storage
          - mountPath: /tmp
            name: {{ include "appl.fullname" . }}-tmpdir-storage

        livenessProbe:
          {{- toYaml .Values.instance.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.instance.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.instance.resources | nindent 10 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      restartPolicy: Always
      volumes:
        {{- if .Values.instance.env.zipCacheEnabled }}
        - name: {{ include "appl.fullname" . }}-zipcache-storage
          persistentVolumeClaim:
            claimName: {{ include "appl.fullname" . }}-zipcache-storage
        {{- end }}
        {{- if .Values.instance.env.blobStorageCacheVolumeEnabled }}
        - name: blobstorage
          emptyDir:
            sizeLimit: {{ .Values.instance.env.blobStorageCacheVolumeSize }}
        {{- end }}
        - name: {{ include "appl.fullname" . }}-sessions-storage
          persistentVolumeClaim:
            claimName: {{ include "appl.fullname" . }}-sessions-storage
        - name: {{ include "appl.fullname" . }}-tmpdir-storage
          persistentVolumeClaim:
            claimName: {{ include "appl.fullname" . }}-tmpdir-storage
