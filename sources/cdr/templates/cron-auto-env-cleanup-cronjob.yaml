{{- if and .Values.cron.enabled .Values.cronautoenvcleanup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "appl.fullname" . }}-cron-auto-env-cleanup
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    app.kubernetes.io/component: job

spec:
  schedule: "{{ .Values.cronautoenvcleanup.schedule }}"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          serviceAccountName: {{ include "appl.serviceAccountName" . }}

          containers:
          - name: {{ include "appl.fullname" . }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            resources:
              {{- toYaml .Values.cronautoenvcleanup.resources | nindent 14 }}
            command:
            - /bin/bash
            - -c
            - |
              /zope-setup.sh && \
              /opt/zope/bin/instance run /opt/zope/bin/auto_env_cleanup \
                --inactive_for 30 \
                --limit 10
            env:
            - name: BEAKER_PATH
              value: '{{ .Values.instance.env.beakerPath }}'
            - name: BEAKER_SECRET
              value: '{{ .Values.instance.env.beakerSecret }}'
            - name: CACHE_PURGING_DOMAIN
              value: '{{ .Values.instance.env.cachePurgingDomain }}'
            - name: CACHE_PURGING_ENABLED
              value: '{{ .Values.instance.env.cachePurgingEnabled }}'
            - name: CACHE_PURGING_PROXY
              value: '{{ .Values.instance.env.cachePurgingProxy }}'
            - name: CACHE_PURGING_PROXY_PORT
              value: '{{ .Values.instance.env.cachePurgingProxyPort }}'
            - name: CACHE_PURGING_VHOST
              value: '{{ .Values.instance.env.cachePurgingVhost }}'
            - name: CACHE_SETTINGS_ENABLED
              value: '{{ .Values.instance.env.cacheSettingsEnabled }}'
            - name: CLAMAV_HOST
              value: '{{ .Values.instance.env.clamavHost }}'
            - name: GRAYLOG
              value: '{{ .Values.instance.env.graylog }}'
            - name: GRAYLOG_FACILITY
              value: '{{ .Values.instance.env.graylogFacility }}'
            - name: RABBITMQ_ENABLED
              value: '{{ .Values.instance.env.rabbitmqEnabled }}'
            - name: RABBITMQ_HOST
              value: '{{ .Values.instance.env.rabbitmqHost }}'
            - name: RABBITMQ_PASS
              value: '{{ .Values.instance.env.rabbitmqPass }}'
            - name: RABBITMQ_PORT
              value: '{{ .Values.instance.env.rabbitmqPort }}'
            - name: RABBITMQ_USER
              value: '{{ .Values.instance.env.rabbitmqUser }}'
            - name: SENTRY_DSN
              value: '{{ .Values.instance.env.sentryDSN }}'
            - name: SENTRY_SITE
              value: '{{ .Values.instance.env.sentrySite }}'
            - name: SENTRY_ENVIRONMENT
              value: '{{ .Values.instance.env.sentryEnvironment }}'
            - name: SENTRY_RELEASE
              value: '{{ include "appl.chart" . }}:{{ .Chart.AppVersion }}'
            - name: DEPLOYMENT_HOST
              value: '{{ .Values.instance.env.deploymentHost }}'
            - name: TZ
              value: '{{ .Values.timezone }}'
            - name: ZEO_ADDRESS
              value: '{{ .Values.instance.env.zeoAddress }}'
          restartPolicy: Never
{{- end }}
