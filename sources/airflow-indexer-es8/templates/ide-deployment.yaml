apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-ide
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.ide.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/component: ide
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/component: ide
    spec:
      containers:
      - name: ide
        image: "{{ .Values.ide.image.repository }}:{{ .Values.ide.image.tag }}"
        imagePullPolicy: {{ .Values.ide.image.pullPolicy }}
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "{{ .Values.ide.env.TZ }}"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: nlp-service-src
          mountPath: /app
        resources:
          limits:
            memory: "{{ .Values.ide.resources.limits.memory }}"
          requests:
            memory: "{{ .Values.ide.resources.requests.memory }}"
        ports:
        - containerPort: 8080
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: {{ (index .Values.ide.volumes 0).persistentVolumeClaim.claimName }}
      - name: nlp-service-src
        persistentVolumeClaim:
          claimName: {{ (index .Values.ide.volumes 1).persistentVolumeClaim.claimName }}
