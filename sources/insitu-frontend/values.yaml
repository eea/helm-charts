image:
  repository: eeacms/insitu-frontend
  pullPolicy: Always
  tag: ""

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

timezone: Europe/Copenhagen

links:
  backend: backend-varnish.insitu

ingress:
  annotations:
    cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt
  certificate: dev-insitu.copernicus.01dev.eea.europa.eu-tls
  tls: enabled

volto:
  serviceType: ClusterIP
  hostname: dev-insitu.copernicus.01dev.eea.europa.eu
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
  resources:
    limits:
      memory: 2Gi
    requests:
      memory: 2Gi
  environment:
    RAZZLE_INTERNAL_API_PATH: http://backend:8080/copernicus
    RAZZLE_PUBLIC_PATH: /
    RAZZLE_SENTRY_DSN: ""
    RAZZLE_SENTRY_RELEASE: ""
    RAZZLE_SENTRY_ENVIRONMENT: 01dev
    CSP_HEADER:
  annotations: {}
  livenessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 10
    timeoutSeconds: 10
    initialDelaySeconds: 30
    failureThreshold: 5
    successThreshold: 1
  startupProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 5
    timeoutSeconds: 10
    initialDelaySeconds: 10
    failureThreshold: 12
    successThreshold: 1

service:
  type: ClusterIP
  port: 3000

varnish:
  serviceType: ClusterIP
  serviceName: frontend-varnish
  port: 3000
  backend: "frontend-volto"
  resources:
    limits:
      memory: 2Gi
    requests:
      memory: 2Gi
  nodeSelector: {}
  tolerations: []

affinity: {}

debug:
  serviceType: ClusterIP
  enabled: false
  resources:
    limits:
      memory: 4Gi
    requests:
      memory: 4Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  environment: {}
  environment:
    VARNISH_SIZE: '2G'
    VARNISH_DNS_TTL: '20s'
    VARNISH_BERESP_TTL: '60s' 
    VARNISH_BERESP_GRACE: '120s'
    VARNISH_BERESP_KEEP: '120s'
    VARNISH_GZIP_ENABLED: 'false'
    VARNISH_GZIP_JSON_ENABLED: 'false' 
    AUTOKILL_CRON: ''
  livenessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 10
    timeoutSeconds: 10
    initialDelaySeconds: 30
    failureThreshold: 5
    successThreshold: 1
  startupProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 5
    timeoutSeconds: 10
    initialDelaySeconds: 10
    failureThreshold: 12
    successThreshold: 1

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
