

image:
  repository: eeacms/marine-frontend
  pullPolicy: Always
  tag: ""

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

timezone: Europe/Copenhagen


ingress:
  certificate: key-01dev-letsencrypt
  tls: true
  path: /marine
  pathType: Prefix
  annotations:
    cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt
    nginx.ingress.kubernetes.io/configuration-snippet: |-
      more_set_headers 'Server HTTPS'
        'Strict-Transport-Security max-age=31536000; includeSubDomains; preload'
        "Expect-CT max-age=604800, report-uri='https://sentry.eea.europa.eu/api/45/security/?sentry_key=0343e20fc4e0469790b6016561f032e3'"
        'X-Content-Type-Options nosniff'
        'X-XSS-Protection "1; mode=block"'
        "X-Frame-Options 'SAMEORIGIN'"
        "Referrer-Policy origin"
        'Permissions-Policy accelerometer=(), autoplay=(), camera=(), encrypted-media=(), fullscreen=(self), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(), sync-xhr=(self), usb=()';
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    nginx.ingress.kubernetes.io/proxy-read-timeout: '480'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '120'
   
ingressredirects:
- enabled: false
  certificate: www.plone.eea.europa.eu-tls
  tls: true
  annotations:
    cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt
  hostname: www.plone.eea.europa.eu    


links:
  backend: backend-varnish.wise-marine

    
volto:
  serviceType: NodePort
  hostname: plone.eea.europa.eu
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 6
    # targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 60
  replicaCount: 1
  resources:
    limits:
      memory: 2Gi
    requests:
      memory: 2Gi
  environment:
    SENTRY_URL: 
    SENTRY_AUTH_TOKEN: 
    SENTRY_ORG: 
    SENTRY_PROJECT: 
    RAZZLE_SENTRY_DSN: 
    RAZZLE_BACKEND_NAME: 'marine-backend'
    RAZZLE_ALLOWED_CORS_DESTINATIONS: 
    RAZZLE_MATOMO_URL:
    RAZZLE_MATOMO_SITE_ID: 
    RAZZLE_MATOMO_SECOND_SITE_ID:
    RAZZLE_MATOMO_SECOND_TRACKER_URL: 
    RAZZLE_INTERNAL_API_PATH: "http://backend:8080/Plone"
    RAZZLE_API_PATH: "/marine"
    VOLTO_ROBOTSTXT: 
    RAZZLE_DISABLE_DRAFT_WATERMARK: 
    CSP_HEADER: 
  annotations: {}
  livenessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 20
    timeoutSeconds: 10
    initialDelaySeconds: 30
    failureThreshold: 6
    successThreshold: 1
  startupProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 5
    timeoutSeconds: 10
    initialDelaySeconds: 10
    failureThreshold: 12
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 15
    timeoutSeconds: 10
    initialDelaySeconds: 60
    failureThreshold: 4
    successThreshold: 2
  
debug:
  addonsPath: /app/src/addons
  affinity: {}
  enabled: false
  environment: {}
  nodeSelector: {}
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    limits:
      memory: 3Gi
    requests:
      memory: 3Gi
  securityContext: {}
  serviceType: NodePort
  tolerations: []

varnish:
  serviceType: NodePort
  serviceName: frontend-varnish
  port: 3000
  backend: "frontend-volto"
  resources:
    limits:
      memory: 3Gi
    requests:
      memory: 3Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  environment:
    VARNISH_SIZE: '2G'
    VARNISH_DNS_TTL: '20s'
    VARNISH_DNS_TTL: '20s'
    VARNISH_BERESP_TTL: '60s'
    VARNISH_BERESP_GRACE: '120s'
    VARNISH_BERESP_KEEP: '120s'
    VARNISH_GZIP_ENABLED: 'false'
    AUTOKILL_CRON: ''
  livenessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 10
    timeoutSeconds: 10
    initialDelaySeconds: 30
    failureThreshold: 5
    successThreshold: 1
  startupProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 5
    timeoutSeconds: 10
    initialDelaySeconds: 10
    failureThreshold: 12
    successThreshold: 1


