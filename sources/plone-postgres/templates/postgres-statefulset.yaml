apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres-ss
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: postgres
spec:
  replicas: 1
  serviceName: {{ .Release.Name }}-postgres
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      component: postgres
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        component: postgres
    spec:
      terminationGracePeriodSeconds: 10
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}
      containers:
      - name: postgres
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 5432
          protocol: TCP
        env:
        - name: TZ
          value: "{{ .Values.timezone }}"
        - name: POSTGRES_USER
          value: "{{ .Values.postgres.env.SuperUser.Name }}"
        - name: POSTGRES_PASSWORD
          value: "{{ .Values.postgres.env.SuperUser.Password }}"
        - name: POSTGRES_DBNAME
          value: "{{ .Values.postgres.env.Database.Name }}"
        - name: POSTGRES_DBUSER
          value: "{{ .Values.postgres.env.Database.UserName }}"
        - name: POSTGRES_DBPASS
          value: "{{ .Values.postgres.env.Database.Password }}"
        - name: POSTGRES_CONFIG
          value: "{{ .Values.postgres.env.Configuration }}"
        - name: POSTGRES_CRONS
          value: "{{ .Values.postgres.env.Crons }}"
        - name: POSTGRES_REPLICATION_NETWORK
          value: "{{ .Values.postgres.env.ReplicationNetwork }}"
        securityContext:
          {{- toYaml .Values.postgres.env.securityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: psqldata
        {{- if .Values.backupstorage.enabled }}
        - mountPath: /postgresql.backup
          name:  psqldata-backup
        {{- end }}
        {{- if .Values.archivestorage.enabled }}
        - mountPath: /var/lib/postgresql/archive
          name:  psqldata-archive
        {{- end }}

        {{- if (.Values.postgres.livenessProbe) }}
        livenessProbe:
          {{- toYaml .Values.postgres.livenessProbe | nindent 10 }}
        {{- end }}
        {{- if (.Values.postgres.startupProbe) }}
        startupProbe:
          {{- toYaml .Values.postgres.startupProbe | nindent 10 }}
        {{- end }}

        resources:
          {{- toYaml .Values.postgres.resources | nindent 10 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
  volumeClaimTemplates:

  - metadata:
      name: psqldata
    spec:
      accessModes:
      - ReadWriteOnce
      {{- if .Values.datastorage.storageClassName }}
      storageClass: "{{ .Values.datastorage.storageClassName }}"
      {{- end }}
      resources:
        requests:
          storage: "{{ .Values.datastorage.size }}"

  {{- if .Values.backupstorage.enabled }}
  - metadata:
      name: psqldata-backup
    spec:
      accessModes:
      - ReadWriteOnce
      {{- if .Values.backupstorage.storageClassName }}
      storageClass: "{{ .Values.backupstorage.storageClassName }}"
      {{- end }}
      resources:
        requests:
          storage: "{{ .Values.backupstorage.size }}"
  {{- end }}

  {{- if .Values.archivestorage.enabled }}
  - metadata:
      name: psqldata-archive
    spec:
      accessModes:
      - ReadWriteOnce
      {{- if .Values.archivestorage.storageClassName }}
      storageClass: "{{ .Values.archivestorage.storageClassName }}"
      {{- end }}
      resources:
        requests:
          storage: "{{ .Values.archivestorage.size }}"
  {{- end }}
