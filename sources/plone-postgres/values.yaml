# Default values

replicaCount: 1

image:
  repository: eeacms/postgres
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

timezone: "Europe/Copenhagen"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


postgres:
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  env:
    SuperUser:
      Name: "postgres"
      Password: "postgres"
    Database: 
      Name: "test"
      UserName: "test"
      Password: "test"
    # configuration options, given in multiline
    Configuration: |-
        max_connections = 150
    Crons: |-
    ReplicationNetwork: ""
  resources:
    requests:
      memory: 4Gi
    limits:
      memory: 4Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe:
    tcpSocket:
      port: 5432
    periodSeconds: 5
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 5
  startupProbe:
    tcpSocket:
      port: 5432
    failureThreshold: 15
    periodSeconds: 5
    initialDelaySeconds: 10
    timeoutSeconds: 2
    successThreshold: 1


datastorage:
  size: 10G
  storageClassName:

archivestorage:
  enabled: false
  storageClassName:
  size: 10G

backupstorage:
  enabled: false
  storageClassName:
  size: 10G

memcached:
  enabled: true
  securityContext: {}
  resources:
    requests:
      memory: 2048Mi
    limits:
      memory: 2048Mi
  #needs < = memory request and limit
  cache_size_m: 2048
  slab_page_size: 50m
  nodeSelector: {}
  tolerations: []
  affinity: {}
  pullPolicy: IfNotPresent
  podAnnotations: {}
  livenessProbe:
    tcpSocket:
      port: 11211
    periodSeconds: 10
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 5
  startupProbe:
    tcpSocket:
      port: 11211
    failureThreshold: 9
    periodSeconds: 10
    timeoutSeconds: 3
    successThreshold: 1

memcachedflush:
  schedule: "0 0 3 * *"
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  resources: {}


