{{- if .Values.gn5.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gn5
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: gn5

spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      component: gn5
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        component: gn5
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}
      containers:
      - name: gn5
        image: juanluisrp/geonetwork5:frontend-exp-indexrecord-7f90b84684d76f83329f1d94bc0c3c0e3808c10f
        env:
        - name: SERVER_PORT
          value: "{{ .Values.gn5.server.port }}"
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://{{ .Values.gn5.database.host }}:{{ .Values.gn5.database.port }}/{{ .Values.gn5.database.dbname }}
        - name: SPRING_DATASOURCE_USERNAME
          value: {{ .Values.gn5.database.username }}
        - name: SPRING_DATASOURCE_PASSWORD  
          value: {{ .Values.gn5.database.password }}
        - name: JAVA_OPTS
          value: -Dfile.encoding=UTF-8
        - name: SPRING_CONFIG_ADDITIONAL_LOCATION
          value: optional:{{ .Values.gn5.directory.config }}/gn5-config.yaml

        # Liveness probe checks if the application is healthy and restarts the container if it fails
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /geonetwork/actuator/health/liveness
            port: {{ .Values.gn5.server.port }}
            scheme: HTTP
          initialDelaySeconds: 90
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        
        # Startup probe checks if the application has started successfully before running liveness/readiness probes
        startupProbe:
          failureThreshold: 30
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: {{ .Values.gn5.server.port }}
          timeoutSeconds: 5


        ports:
        - containerPort: 8080
        resources:
          {{- toYaml .Values.gn5.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /catalogue-data
          name: sdi-gn5-data
        - mountPath: /var/local/gis_sdi
          name: gis-sdi
          readOnly: false

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always

      volumes:
      - name: sdi-gn5-data
        persistentVolumeClaim:
          claimName: sdi-gn5-data
      - name: gis-sdi
        persistentVolumeClaim:
          claimName: gis-sdi
          readOnly: false
          
      # Liveness Probe: For detecting critical failures and triggering restarts
      #livenessProbe:
      #  httpGet:
      #    path: /api/search?q=aaa&size=1 # GeoNetwork context path + mai n search endpoint
      #    port: 8080
      #    scheme: HTTP
      #  initialDelaySeconds: 120 # GeoNetwork can take a while to start up, adjust if needed
      #  periodSeconds: 30       # Check every 30 seconds
      #  timeoutSeconds: 10      # Wait up to 10 seconds for a response
      #  failureThreshold: 3     # Allow 3 consecutive failures before restarting
 {{- end }}
