apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: {{ .Values.grafana.replicas }}
  selector:
    matchLabels:
      app: garie
  template:
    metadata:
      labels:
        app: garie
        role: grafana
        tier: frontend
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:12.0.0
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.grafana.adminPassword | quote }}
            - name: TZ
              value: {{ .Values.grafana.timezone | default "UTC" | quote }}
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: {{ .Values.grafana.resources.requests.memory }}
            limits:
              memory: {{ .Values.grafana.resources.limits.memory }}
          volumeMounts:
            - name: grafana-config
              mountPath: /etc/grafana
            - name: grafana-data
              mountPath: /var/lib/grafana
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: {{ .Values.grafana.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.grafana.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.grafana.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.grafana.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: {{ .Values.grafana.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.grafana.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.grafana.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.grafana.readinessProbe.failureThreshold }}
      volumes:
        - name: grafana-config√ü
          persistentVolumeClaim:
            claimName: grafana-config
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data
      restartPolicy: Always