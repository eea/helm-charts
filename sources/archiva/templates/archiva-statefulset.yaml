apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: archiva
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: archiva

spec:
  replicas: 1
  serviceName: db
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      component: archiva
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        component: archiva
    spec:
      terminationGracePeriodSeconds: 10
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}

      containers:
      - name: archiva
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        env:
        - name: PROXY_BASE_URL
          value: {{ .Values.proxyBaseUrl }}
        - name: SMTP_HOST
          value: {{ .Values.smtpHost }}
        - name: SMTP_PORT
          value: "{{ .Values.smtpPort }}"

        ports:
        - containerPort: 8080

        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}

        volumeMounts:
        - mountPath: /archiva-data
          name: archiva-eionet-data

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      restartPolicy: Always

  volumeClaimTemplates:
  - metadata:
      name: archiva-eionet-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 15Gi

