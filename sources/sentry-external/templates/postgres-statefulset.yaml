apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres-ss
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: postgres
spec:
  replicas: 1
  serviceName: {{ .Release.Name }}-postgres
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      component: postgres
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        component: postgres
      annotations:
        {{- toYaml .Values.postgres.podAnnotations | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 10
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}
      containers:
        - name: postgres
          image: eeacms/sentry-postgres:21.7.0
          imagePullPolicy: {{ .Values.postgres.pullPolicy }}
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: TZ
              value: "{{ .Values.timezone }}"
            {{- range $key, $value := .Values.postgres.environment }}
            {{- if ($value) }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}

          securityContext:
            {{- toYaml .Values.postgres.securityContext | nindent 12 }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: psqldata
          {{- if .Values.postgres.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.postgres.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.postgres.startupProbe }}
          startupProbe:
            {{- toYaml .Values.postgres.startupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
      {{- with .Values.postgres.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.postgres.podSecurityContext | nindent 8 }}
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: psqldata
      spec:
        accessModes:
          - ReadWriteOnce
        {{- if .Values.postgres.datastorage.storageClassName }}
        storageClassName: "{{ .Values.postgres.datastorage.storageClassName }}"
        {{- end }}
        resources:
          requests:
            storage: "{{ .Values.postgres.datastorage.size }}"
