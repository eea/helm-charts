questions:
- variable: storage.className
  default: "local-path"
  description: "Storage class name for persistent volumes"
  type: string
  label: Storage Class
  group: "Storage Configuration"

- variable: storage.elasticData.size
  default: "10Gi"
  description: "Storage size for Elasticsearch data node"
  type: string
  label: Data Node Storage Size
  group: "Storage Configuration"

- variable: storage.elasticMaster.size
  default: "5Gi"
  description: "Storage size for Elasticsearch master node"
  type: string
  label: Master Node Storage Size
  group: "Storage Configuration"

- variable: storage.reclaimPolicy
  default: "Retain"
  description: "Reclaim policy for persistent volumes (Retain keeps data after deletion)"
  type: enum
  options:
    - "Retain"
    - "Delete"
    - "Recycle"
  label: Storage Reclaim Policy
  group: "Storage Configuration"

- variable: replicas.elasticData
  default: 1
  description: "Number of Elasticsearch data nodes (can be scaled horizontally)"
  type: int
  label: Data Node Replicas
  group: "Scaling Configuration"

- variable: replicas.elasticMaster
  default: 1
  description: "Number of Elasticsearch master nodes (usually 1 or 3 for HA)"
  type: int
  label: Master Node Replicas
  group: "Scaling Configuration"

- variable: image.elastic
  default: "eeacms/elastic:8"
  description: "Elasticsearch Docker image"
  type: string
  label: Elasticsearch Image
  group: "Container Images"

- variable: image.cerebro
  default: "eeacms/cerebro:0.9.4"
  description: "Cerebro Docker image"
  type: string
  label: Cerebro Image
  group: "Container Images"

- variable: image.elkKibana
  default: "eeacms/elk-kibana:8.1.0"
  description: "Kibana Docker image"
  type: string
  label: Kibana Image
  group: "Container Images"

- variable: image.esclusterhealth
  default: "eeacms/esclusterhealth:1.1"
  description: "Elasticsearch cluster health monitor image"
  type: string
  label: Cluster Health Image
  group: "Container Images"

- variable: resources.elasticMaster.requests.memory
  default: "4Gi"
  description: "Memory request for Elasticsearch master node"
  type: string
  label: Master Node Memory Request
  group: "Resource Configuration"

- variable: resources.elasticMaster.limits.memory
  default: "4Gi"
  description: "Memory limit for Elasticsearch master node"
  type: string
  label: Master Node Memory Limit
  group: "Resource Configuration"

- variable: resources.elasticData.requests.memory
  default: "6Gi"
  description: "Memory request for Elasticsearch data node"
  type: string
  label: Data Node Memory Request
  group: "Resource Configuration"

- variable: resources.elasticData.limits.memory
  default: "10Gi"
  description: "Memory limit for Elasticsearch data node"
  type: string
  label: Data 
   Memory Limit
  group: "Resource Configuration"

- variable: resources.kibana.requests.memory
  default: "1Gi"
  description: "Memory request for Kibana"
  type: string
  label: Kibana Memory Request
  group: "Resource Configuration"

- variable: resources.kibana.limits.memory
  default: "2Gi"
  description: "Memory limit for Kibana"
  type: string
  label: Kibana Memory Limit
  group: "Resource Configuration"

- variable: resources.cerebro.requests.memory
  default: "256Mi"
  description: "Memory request for Cerebro"
  type: string
  label: Cerebro Memory Request
  group: "Resource Configuration"

- variable: resources.cerebro.limits.memory
  default: "1Gi"
  description: "Memory limit for Cerebro"
  type: string
  label: Cerebro Memory Limit
  group: "Resource Configuration"

- variable: environment.cerebro.BASIC_AUTH_USER
  default: "admin"
  description: "Basic authentication username for Cerebro"
  type: string
  label: Cerebro Admin Username
  group: "Authentication"

- variable: environment.cerebro.BASIC_AUTH_PWD
  default: "admin"
  description: "Basic authentication password for Cerebro"
  type: password
  label: Cerebro Admin Password
  group: "Authentication"

- variable: environment.cerebro.CEREBRO_SECRET
  default: "CHANGE_THIS"
  description: "Secret key for Cerebro application"
  type: password
  label: Cerebro Secret Key
  group: "Authentication"

- variable: environment.elasticMaster.cluster_name
  default: "es8-cluster"
  description: "Elasticsearch cluster name"
  type: string
  label: Cluster Name
  group: "Elasticsearch Configuration"

- variable: environment.elasticMaster.ES_JAVA_OPTS
  default: "-Xms2048m -Xmx2048m"
  description: "Java options for Elasticsearch master node"
  type: string
  label: Master Node Java Options
  group: "Elasticsearch Configuration"

- variable: environment.elasticData.ES_JAVA_OPTS
  default: "-Xms4096m -Xmx4096m"
  description: "Java options for Elasticsearch data node"
  type: string
  label: Data Node Java Options
  group: "Elasticsearch Configuration"

- variable: environment.elasticMaster.xpack_security_enabled
  default: "false"
  description: "Enable X-Pack security"
  type: boolean
  label: Enable X-Pack Security
  group: "Security Configuration"

- variable: environment.kibana.TELEMETRY_ENABLED
  default: "false"
  description: "Enable Kibana telemetry"
  type: boolean
  label: Enable Kibana Telemetry
  group: "Kibana Configuration"

- variable: environment.kibana.ELASTICSEARCH_REQUESTTIMEOUT
  default: "300000"
  description: "Elasticsearch request timeout in milliseconds"
  type: string
  label: Elasticsearch Request Timeout
  group: "Kibana Configuration"

- variable: global.nodeSelector.ReservedFor
  default: "AILab"
  description: "Node selector label value for scheduling pods on specific nodes"
  type: string
  label: Node Selector Value
  group: "Node Configuration"
  show_if: "global.nodeSelector.enabled=true"

- variable: global.nodeSelector.enabled
  default: true
  description: "Enable node selector for scheduling pods on specific nodes"
  type: boolean
  label: Enable Node Selector
  group: "Node Configuration"

- variable: global.tolerations.enabled
  default: true
  description: "Enable tolerations for node taints (requires node selector to be enabled)"
  type: boolean
  label: Enable Tolerations
  group: "Node Configuration"
  show_if: "global.nodeSelector.enabled=true"

- variable: global.tolerations.values[0].key
  default: "ReservedFor"
  description: "Toleration key for node taints"
  type: string
  label: Toleration Key
  group: "Node Configuration"
  show_if: "global.tolerations.enabled=true"

- variable: global.tolerations.values[0].value
  default: "AILab"
  description: "Toleration value for node taints"
  type: string
  label: Toleration Value
  group: "Node Configuration"
  show_if: "global.tolerations.enabled=true"

- variable: global.tolerations.values[0].effect
  default: "NoSchedule"
  description: "Toleration effect for node taints"
  type: enum
  options:
    - "NoSchedule"
    - "PreferNoSchedule"
    - "NoExecute"
  label: Toleration Effect
  group: "Node Configuration"
  show_if: "global.tolerations.enabled=true"

- variable: global.tolerations.values[1].key
  default: "HasGPU"
  description: "Second toleration key for GPU node taints"
  type: string
  label: GPU Toleration Key
  group: "Node Configuration"
  show_if: "global.tolerations.enabled=true"

- variable: global.tolerations.values[1].value
  default: "Yes"
  description: "Second toleration value for GPU node taints"
  type: string
  label: GPU Toleration Value
  group: "Node Configuration"
  show_if: "global.tolerations.enabled=true"

- variable: global.tolerations.values[1].effect
  default: "NoSchedule"
  description: "Second toleration effect for GPU node taints"
  type: enum
  options:
    - "NoSchedule"
    - "PreferNoSchedule"
    - "NoExecute"
  label: GPU Toleration Effect
  group: "Node Configuration"
  show_if: "global.tolerations.enabled=true"

# Elasticsearch Ingress Configuration
- variable: ingresses[0].name
  default: "elasticsearch"
  description: "Name for the Elasticsearch ingress"
  type: string
  label: Elasticsearch Ingress Name
  group: "Ingress Configuration"

- variable: ingresses[0].enabled
  default: true
  description: "Enable ingress for Elasticsearch access"
  type: boolean
  label: Enable Elasticsearch Ingress
  group: "Ingress Configuration"

- variable: ingresses[0].className
  default: "nginx"
  description: "Ingress class name for Elasticsearch"
  type: string
  label: Elasticsearch Ingress Class
  group: "Ingress Configuration"
  show_if: "ingresses[0].enabled=true"

- variable: ingresses[0].hosts[0].host
  default: "elastic8-internal.ai-lab-aws.eea.europa.eu"
  description: "Hostname for Elasticsearch ingress"
  type: string
  label: Elasticsearch Hostname
  group: "Ingress Configuration"
  show_if: "ingresses[0].enabled=true"

- variable: ingresses[0].annotations."nginx.ingress.kubernetes.io/whitelist-source-range"
  default: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
  description: "IP whitelist for Elasticsearch ingress access"
  type: string
  label: Elasticsearch IP Whitelist
  group: "Ingress Configuration"
  show_if: "ingresses[0].enabled=true"

- variable: ingresses[0].tls.enabled
  default: false
  description: "Enable TLS for Elasticsearch ingress"
  type: boolean
  label: Enable Elasticsearch TLS
  group: "Ingress Configuration"
  show_if: "ingresses[0].enabled=true"

# Kibana Ingress Configuration
- variable: ingresses[1].name
  default: "kibana"
  description: "Name for the Kibana ingress"
  type: string
  label: Kibana Ingress Name
  group: "Ingress Configuration"

- variable: ingresses[1].enabled
  default: false
  description: "Enable ingress for Kibana access"
  type: boolean
  label: Enable Kibana Ingress
  group: "Ingress Configuration"

- variable: ingresses[1].className
  default: "nginx"
  description: "Ingress class name for Kibana"
  type: string
  label: Kibana Ingress Class
  group: "Ingress Configuration"
  show_if: "ingresses[1].enabled=true"

- variable: ingresses[1].hosts[0].host
  default: "elastic8-kibana.ai-lab-aws.eea.europa.eu"
  description: "Hostname for Kibana ingress"
  type: string
  label: Kibana Hostname
  group: "Ingress Configuration"
  show_if: "ingresses[1].enabled=true"

- variable: ingresses[1].annotations."nginx.ingress.kubernetes.io/whitelist-source-range"
  default: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
  description: "IP whitelist for Kibana ingress access"
  type: string
  label: Kibana IP Whitelist
  group: "Ingress Configuration"
  show_if: "ingresses[1].enabled=true"

- variable: ingresses[1].tls.enabled
  default: false
  description: "Enable TLS for Kibana ingress"
  type: boolean
  label: Enable Kibana TLS
  group: "Ingress Configuration"
  show_if: "ingresses[1].enabled=true"

# Cerebro Ingress Configuration
- variable: ingresses[2].name
  default: "cerebro"
  description: "Name for the Cerebro ingress"
  type: string
  label: Cerebro Ingress Name
  group: "Ingress Configuration"

- variable: ingresses[2].enabled
  default: false
  description: "Enable ingress for Cerebro access"
  type: boolean
  label: Enable Cerebro Ingress
  group: "Ingress Configuration"

- variable: ingresses[2].className
  default: "nginx"
  description: "Ingress class name for Cerebro"
  type: string
  label: Cerebro Ingress Class
  group: "Ingress Configuration"
  show_if: "ingresses[2].enabled=true"

- variable: ingresses[2].hosts[0].host
  default: "elastic8-cerebro.ai-lab-aws.eea.europa.eu"
  description: "Hostname for Cerebro ingress"
  type: string
  label: Cerebro Hostname
  group: "Ingress Configuration"
  show_if: "ingresses[2].enabled=true"

- variable: ingresses[2].annotations."nginx.ingress.kubernetes.io/whitelist-source-range"
  default: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
  description: "IP whitelist for Cerebro ingress access"
  type: string
  label: Cerebro IP Whitelist
  group: "Ingress Configuration"
  show_if: "ingresses[2].enabled=true"

- variable: ingresses[2].tls.enabled
  default: false
  description: "Enable TLS for Cerebro ingress"
  type: boolean
  label: Enable Cerebro TLS
  group: "Ingress Configuration"
  show_if: "ingresses[2].enabled=true"

# LoadBalancer Configuration
- variable: loadBalancer.esMaster.enabled
  default: false
  description: "Enable LoadBalancer service for es-master with persistent IP"
  type: boolean
  label: Enable LoadBalancer for Elasticsearch Master
  group: "LoadBalancer Configuration"

- variable: loadBalancer.esMaster.loadBalancerIP
  default: ""
  description: "Static IP address for LoadBalancer (optional, keeps IP on upgrades)"
  type: string
  label: LoadBalancer Static IP
  group: "LoadBalancer Configuration"
  show_if: "loadBalancer.esMaster.enabled=true"