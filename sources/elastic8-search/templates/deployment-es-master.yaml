apiVersion: apps/v1
kind: Deployment
metadata:
  name: es-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: es-master
  template:
    metadata:
      labels:
        app: es-master
    spec:
      containers:
      - name: es-master
        image: {{ .Values.image.elastic }}
        env:
        - name: ES_JAVA_OPTS
          value: {{ .Values.environment.elasticMaster.ES_JAVA_OPTS }}
        - name: TZ
          value: {{ .Values.environment.elasticMaster.TZ }}
        - name: bootstrap.memory_lock
          value: "{{ .Values.environment.elasticMaster.bootstrap_memory_lock }}"
        - name: cluster.initial_master_nodes
          value: {{ .Values.environment.elasticMaster.cluster_initial_master_nodes }}
        - name: cluster.name
          value: {{ .Values.environment.elasticMaster.cluster_name }}
        - name: cluster.routing.allocation.disk.watermark.high
          value: "{{ .Values.environment.elasticMaster.cluster_routing_allocation_disk_watermark_high }}"
        - name: cluster.routing.allocation.disk.watermark.low
          value: "{{ .Values.environment.elasticMaster.cluster_routing_allocation_disk_watermark_low }}"
        - name: discovery.seed_hosts
          value: {{ .Values.environment.elasticMaster.discovery_seed_hosts }}
        - name: node.name
          value: ${HOSTNAME}
        - name: node.roles
          value: {{ .Values.environment.elasticMaster.node_roles }}
        - name: xpack.security.enabled
          value: "{{ .Values.environment.elasticMaster.xpack_security_enabled }}"
        - name: xpack.security.transport.ssl.enabled
          value: "{{ .Values.environment.elasticMaster.xpack_security_transport_ssl_enabled }}"

        resources:
          limits:
            memory: {{ .Values.resources.elasticMaster.limits.memory }}
          requests:
            memory: {{ .Values.resources.elasticMaster.requests.memory }}
        ports:
        - containerPort: 9200
        volumeMounts:
        - name: elastic-data
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: elastic-data
        persistentVolumeClaim:
          claimName: elastic-master-pvc
      {{- if and .Values.global.nodeSelector .Values.global.nodeSelector.enabled }}
      nodeSelector:
        {{- range $key, $value := .Values.global.nodeSelector }}
        {{- if ne $key "enabled" }}
        {{ $key }}: {{ $value }}
        {{- end }}
        {{- end }}
      {{- end }}
      {{- if and .Values.global.tolerations .Values.global.tolerations.enabled }}
      tolerations:
        {{- toYaml .Values.global.tolerations.values | nindent 8 }}
      {{- end }}
