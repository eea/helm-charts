

image:
  repository: eeacms/eea-website-frontend
  pullPolicy: Always
  tag: ""

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

timezone: Europe/Copenhagen


ingress:
  enabled: true
  production: false
  letsencrypt: "01dev-eea-letsencrypt"
  configuration:
    proxy-body-size: "100m"
    proxy-read-timeout: "120s"
    proxy-send-timeout: "60s"
    configuration-snippet: |-
      add_header Server "HTTPS" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      add_header Expect-CT "max-age=604800, report-uri='https://sentry.eea.europa.eu/api/45/security/?sentry_key=0343e20fc4e0469790b6016561f032e3'" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header Referrer-Policy "origin" always;
      add_header Permissions-Policy "accelerometer=(), autoplay=(), camera=(), encrypted-media=(), fullscreen=(self), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(), sync-xhr=(self), usb=()" always; 

  tls: true
  certificate: "demo-www.01dev.eea.europa.eu-tls"
  ingressClassName: "nginx"
  backend: false
  backendService: backend-nginx
  pathType: Prefix  # Options: Prefix, ImplementationSpecific

links:
  backend:

volto:
  serviceType: ClusterIP
  hostname: demo-www.01dev.eea.europa.eu
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 6
    # targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 60
  replicaCount: 1
  resources:
    limits:
      memory: 2Gi
    requests:
      memory: 2Gi
  environment:
    CSP_HEADER:
    LLMGW_URL:
    LLMGW_TOKEN:
    DANSWER_URL:
    DANSWER_API_KEY:
    SENTRY_URL:
    SENTRY_AUTH_TOKEN:
    SENTRY_ORG:
    SENTRY_PROJECT:
    RAZZLE_SENTRY_DSN:
    RAZZLE_BACKEND_NAME: 'eea-website-backend'
    RAZZLE_ALLOWED_CORS_DESTINATIONS:
    RAZZLE_MATOMO_URL:
    RAZZLE_MATOMO_SITE_ID:
    RAZZLE_MATOMO_SECOND_SITE_ID:
    RAZZLE_INTERNAL_API_PATH:
    RAZZLE_PUBLIC_URL:
    RAZZLE_DISABLE_DRAFT_WATERMARK:
    RAZZLE_PROXY_ES_DSN_datahub:
    RAZZLE_PROXY_QA_DSN_datahub:
    RAZZLE_PROXY_ES_DSN_globalsearch:
    RAZZLE_PROXY_QA_DSN_globalsearch:
    RAZZLE_PROXY_DOCUMENTCOUNTTHRESHOLD_datahub:
    RAZZLE_PROXY_QUERYTIMESECONDSTHRESHOLD_OK_datahub:
    RAZZLE_PROXY_QUERYTIMESECONDSTHRESHOLD_WARNING_datahub:
    RAZZLE_PROXY_DOCUMENTCOUNTTHRESHOLD_globalsearch:
    RAZZLE_PROXY_QUERYTIMESECONDSTHRESHOLD_OK_globalsearch:
    RAZZLE_PROXY_QUERYTIMESECONDSTHRESHOLD_WARNING_globalsearch:
    VOLTO_ROBOTSTXT:
  annotations: {}
  livenessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 20
    timeoutSeconds: 10
    initialDelaySeconds: 30
    failureThreshold: 6
    successThreshold: 1
  startupProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 5
    timeoutSeconds: 10
    initialDelaySeconds: 10
    failureThreshold: 12
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 15
    timeoutSeconds: 10
    initialDelaySeconds: 60
    failureThreshold: 4
    successThreshold: 2

debug:
  enabled: true
  serviceName: frontend-debug
  port: 3000
  addonsPath: /app/src/addons
  affinity: {}
  environment: {}
  nodeSelector: {}
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    limits:
      memory: 3Gi
    requests:
      memory: 3Gi
  securityContext: {}
  serviceType: ClusterIP
  tolerations: []
  storage:
    size: 10Gi
    storageClassName: "nfs-client"
    accessMode: "ReadWriteMany"

varnish:
  serviceType: ClusterIP
  serviceName: frontend-varnish
  port: 3000
  backend: "frontend-volto"
  resources:
    limits:
      memory: 3Gi
    requests:
      memory: 3Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  environment:
    VARNISH_SIZE: '2G'
    VARNISH_DNS_TTL: '20s'
    VARNISH_BERESP_TTL: '60s'
    VARNISH_BERESP_GRACE: '120s'
    VARNISH_BERESP_KEEP: '120s'
    VARNISH_GZIP_ENABLED: 'false'
    VARNISH_GZIP_JSON_ENABLED: 'false'
    AUTOKILL_CRON: ''
  livenessProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 10
    timeoutSeconds: 10
    initialDelaySeconds: 30
    failureThreshold: 5
    successThreshold: 1
  startupProbe:
    httpGet:
      path: /ok
      port: http
    periodSeconds: 5
    timeoutSeconds: 10
    initialDelaySeconds: 10
    failureThreshold: 12
    successThreshold: 1

nginx:
  conf: |-
    # Trust only your VPC/ELB subnets
    # set_real_ip_from 10.140.0.0/16;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    # Logs: show both LB IP and real client IP
    log_format realip '$remote_addr (lb) $http_x_forwarded_for (client) - $remote_user '
                      '[$time_local] "$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      'rt=$request_time ua="$upstream_addr" uat="$upstream_response_time"';  

    # --- CORS allowlist for eea.europa.eu origins ---
    map $http_origin $cors_origin {
      default                        "";
      ~^https?://([a-z0-9.-]+\.)?eea\.europa\.eu$  $http_origin;
    }
    map $cors_origin $cors_allow_methods     { default ""; "~." "GET"; }
    map $cors_origin $cors_allow_credentials { default ""; "~." "true"; }
    map $cors_origin $cors_max_age           { default ""; "~." "1728000"; }
      
    server {
      listen 80;
      server_name _;
    
      # Direct logs to stdout/stderr
      access_log /dev/stdout realip;
      error_log /dev/stderr;  


      add_header Access-Control-Allow-Origin      $cors_origin always;
      add_header Access-Control-Allow-Methods     $cors_allow_methods always;
      add_header Access-Control-Allow-Credentials $cors_allow_credentials always;
      add_header Access-Control-Max-Age           $cors_max_age always;
      add_header Vary                             "Origin" always;


      location ~ ^/(cors-proxy|login-authomatic|controlpanel|static|_es|_da|_ha|ok|personal-information|fallback_login|en|voltoCustom.css) {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
        proxy_redirect http:// https://;
        proxy_pass http://varnish_frontend$request_uri;
      }

      # Redirect old /ims paths
      location /ims {
        rewrite ^/ims(/.*)?$ /en/analysis/indicators$1 permanent;
      }

      # Redirect root and specific paths to /en
      location = / {
          return 301 https://$host/en;
      }
      location = /view {
          return 301 https://$host/en;
      }
      location = /view/ {
          return 301 https://$host/en;
      }
      location = /frontpage_view {
          return 301 https://$host/en;
      }
      location = /frontpage_view/ {
          return 301 https://$host/en;
      }

      # Redirect login paths to /en/login
      location = /login {
          return 301 https://$host/en/login;
      }
      location = /login_form {
          return 301 https://$host/en/login;
      }

      # Redirect azure login paths to /en/login
      location = /azure_login {
          return 301 https://$host/en/login;
      }
      location = /en/azure_login {
          return 301 https://$host/en/login;
      }

      # Fallback: proxy everything else to old deployment
      location / {
        proxy_pass https://34.246.63.148$request_uri;
        proxy_set_header Host www.eea.europa.eu;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }
    }
