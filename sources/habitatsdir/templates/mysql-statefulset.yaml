apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-mysql
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: mysql

spec:
  replicas: 1
  serviceName: {{ .Release.Name }}-mysql
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      component: mysql
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        component: mysql
    spec:
      terminationGracePeriodSeconds: 10
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}

      containers:
      - name: {{ .Release.Name }}-mysql
        image: "{{ .Values.mysql.image }}"
        ports:
        - containerPort: 3306
          protocol: TCP
        env:
        - name: MYSQL_DATABASE
          value: "{{ .Values.mysql.database }}"
        - name: MYSQL_ROOT_PASSWORD
          value: "{{ .Values.mysql.rootpw }}"
#       - name: MYSQL_PASSWORD
#         value: "{{ .Values.mysql.password }}"
#       - name: MYSQL_USER
#         value: "{{ .Values.mysql.username }}"
        - name: TZ
          value: "{{ .Values.timezone }}"
        securityContext:
          {{- toYaml .Values.mysql.securityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: {{ .Release.Name }}-mysql
        readinessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 15
          periodSeconds: 20
        {{- with .Values.mysql.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.mysql.resources | nindent 10 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always

  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-mysql
    spec:
      accessModes:
      - ReadWriteOnce
      {{- if .Values.mysql.storageClassName }}
      storageClass: "{{ .Values.mysql.storageClassName }}"
      {{- end }}
      resources:
        requests:
          storage: "{{ .Values.mysql.storage }}"
