apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "appl.fullname" . }}
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      component: app
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        component: app
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        ports:
        - containerPort: 5000
          protocol: TCP
        env:
        - name: ART17_SERVER_NAME
          value: "eionet.europa.eu"
        - name: ASSETS_DEBUG
          value: "True"
        - name: AUTH_DEBUG
          value: "False"
        - name: BIND_NAME
          value: art17_eu
        - name: DB_HOST
          value: {{ .Release.Name }}-psql
        - name: DB_NAME
          value: art17prod
        - name: DB_PASS
          value: {{ .Values.postgres.password }}
        - name: DB_SCHEMA
          value: postgresql
        - name: DB_USER
          value: {{ .Values.postgres.username }}
        - name: DEBUG
          value: "False"
        - name: DEMO_SERVER
          value: "False"
        - name: EEA_LDAP_PORT
          value:  "{{ .Values.ldap.port }}"
        - name: EEA_LDAP_PROTOCOL
          value:  "{{ .Values.ldap.protocol }}"
        - name: EEA_LDAP_SERVER
          value:  "{{ .Values.ldap.server }}"
        - name: EEA_PASSWORD_RESET
          value: "{{ .Values.passwordReset }}"
        - name: FLASK_APP
          value: art17/app.py

        - name: MYSQL_ADDR
          value: {{ .Release.Name }}-mysql
        - name: MYSQL_ROOT_PASSWORD
          value: "{{ .Values.mysql.rootpw }}"
                   
        - name: TZ
          value: "{{ .Values.timezone }}"
{{- if .Values.factsheetsRemoteUrl -}}
        - name: FACTSHEETS_REMOTE_URL
          value: "{{ .Values.factsheetsRemoteUrl }}"
{{- end }}
{{- if .Values.pdfRemoteUrl -}}
        - name: PDF_URL_PREFIX
          value: "{{ .Values.pdfRemoteUrl }}"
{{- end }}

        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        volumeMounts:
        - mountPath: /var/local/static
          name: {{ .Release.Name }}-static
        - mountPath: /var/local/art17-data/maps
          name: {{ .Release.Name }}-maps
        - mountPath: /var/local/art17-data/factsheets
          name: {{ .Release.Name }}-factsheets
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 3
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /
            port: 5000
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      volumes:
      - name: {{ .Release.Name }}-static
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-static
      - name: {{ .Release.Name }}-maps
        persistentVolumeClaim:
          name: {{ .Release.Name }}-maps
      - name: {{ .Release.Name }}-factsheets
        persistentVolumeClaim:
          name: {{ .Release.Name }}-factsheets
