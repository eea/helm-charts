apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-psql
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: postgres

spec:
  replicas: 1
  serviceName: {{ .Release.Name }}-psql
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      component: postgres
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        component: postgres
    spec:
      terminationGracePeriodSeconds: 10
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}

      containers:
      - name: {{ .Release.Name }}-psql
        image: postgres:13
        ports:
        - containerPort: 5432
          protocol: TCP
        env:
        - name: ASSETS_DEBUG
          value: "True"
        - name: AUTH_DEBUG
          value: "False"
        - name: BIND_NAME
          value: art17_eu
        - name: DB_HOST
          value: art17-postgres
        - name: DB_NAME
          value: art17prod
        - name: DB_PASS
          value: {{ .Values.postgres.password }}
        - name: DB_SCHEMA
          value: postgresql
        - name: DB_USER
          value: art17prod
        - name: DEBUG
          value: "False"
#       - name: POSTGRES_ADDR
#         value: art17-postgres
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgres.psqlpw }}
        - name: STATIC_ROOT
          value: /var/local/static
        - name: TZ
          value: "{{ .Values.timezone }}"
        securityContext:
          {{- toYaml .Values.postgres.securityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: {{ .Release.Name }}-psqldata
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 15
          periodSeconds: 20
        {{- with .Values.postgres.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.postgres.resources | nindent 10 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always

  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-psqldata
    spec:
      accessModes:
      - ReadWriteOnce
      {{- if .Values.postgres.storageClassName }}
      storageClass: "{{ .Values.postgres.storageClassName }}"
      {{- end }}
      resources:
        requests:
          storage: "{{ .Values.postgres.storage }}"
