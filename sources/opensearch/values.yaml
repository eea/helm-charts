---
opensearch:
  extraEnvs:
    - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
      value: "zM2?vQ0&mI5>xP2*1"

  clusterName: "opensearch-cluster"
  nodeGroup: "master"
  masterService: "opensearch-cluster-master"

  roles:
    - master
    - ingest
    - data
    - remote_cluster_client

  replicas: 3

  opensearchHome: /usr/share/opensearch

  config:
    # Values must be YAML literal style scalar / YAML multiline string.
    # <filename>: |
    #   <formatted-value(s)>
    # log4j2.properties: |
    #   status = error
    #
    #   appender.console.type = Console
    #   appender.console.name = console
    #   appender.console.layout.type = PatternLayout
    #   appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] [%node_name]%marker %m%n
    #
    #   rootLogger.level = info
    #   rootLogger.appenderRef.console.ref = console
    opensearch.yml: |
      cluster.name: opensearch-cluster  

      # Bind to all interfaces because we don't know what IP address Docker will assign to us.
      network.host: 0.0.0.0 

      # Setting network.host to a non-loopback address enables the annoying bootstrap checks. "Single-node" mode disables them again.
      # Implicitly done if ".singleNode" is set to "true".
      # discovery.type: single-node 

      # Start OpenSearch Security Demo Configuration
      # WARNING: revise all the lines below before you go into production
      plugins:
        security:
          ssl:
            transport:
              pemcert_filepath: esnode.pem
              pemkey_filepath: esnode-key.pem
              pemtrustedcas_filepath: root-ca.pem
              enforce_hostname_verification: false
            http:
              enabled: true
              pemcert_filepath: esnode.pem
              pemkey_filepath: esnode-key.pem
              pemtrustedcas_filepath: root-ca.pem
              clientauth_mode: OPTIONAL
          allow_unsafe_democertificates: true
          allow_default_init_securityindex: true
          authcz:
            admin_dn:
              - CN=kirk,OU=client,O=client,L=test,C=de
          audit.type: internal_opensearch
          enable_snapshot_restore_privilege: true
          check_snapshot_restore_write_privileges: true
          restapi:
            roles_enabled: ["all_access", "security_rest_api_access"]
          system_indices:
            enabled: true
            indices:
              [
                ".opendistro-alerting-config",
                ".opendistro-alerting-alert*",
                ".opendistro-anomaly-results*",
                ".opendistro-anomaly-detector*",
                ".opendistro-anomaly-checkpoints",
                ".opendistro-anomaly-detection-state",
                ".opendistro-reports-*",
                ".opendistro-notifications-*",
                ".opendistro-notebooks",
                ".opendistro-asynchronous-search-response*",
              ]
      ######## End OpenSearch Security Demo Configuration ########

  image:
    repository: "opensearchproject/opensearch"
    tag: ""
    pullPolicy: "IfNotPresent"

  opensearchJavaOpts: "-Xmx512M -Xms512M"

  resources:
    requests:
      cpu: "1000m"
      memory: "100Mi"

  networkHost: "0.0.0.0"

  persistence:
    enabled: true
    enableInitChown: true
    accessModes:
      - ReadWriteOnce
    size: 8Gi

  sysctlVmMaxMapCount: 262144

  ingress:
    enabled: false
    path: /
    hosts:
      - opensearch.example.com

  sysctl:
    enabled: false

  plugins:
    enabled: false
    installList: []
