
image:
  repository: eeacms/cachet
  pullPolicy: Always
  tag: ""

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

timezone: Europe/Copenhagen


ingress:
  certificate: key-01dev-letsencrypt
  tls: true
  annotations:
    cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt
    nginx.ingress.kubernetes.io/configuration-snippet: |-
      more_set_headers 'Server HTTPS'
        'Strict-Transport-Security max-age=31536000; includeSubDomains; preload'
        'X-Content-Type-Options "nosniff"'
        'X-XSS-Protection "1; mode=block"'
        "X-Frame-Options 'SAMEORIGIN'"
        "Referrer-Policy origin"
        "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; font-src 'self'; img-src 'self' data:; connect-src 'self'; frame-src 'self'; object-src 'none'; base-uri 'self'; frame-ancestors 'self';"
        'Permissions-Policy accelerometer=(), autoplay=(), camera=(), encrypted-media=(), fullscreen=(self), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(), sync-xhr=(self), usb=()';
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    nginx.ingress.kubernetes.io/proxy-read-timeout: '480'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '120'
   
   
   
postgres:
  pullPolicy: IfNotPresent
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  environment:
    POSTGRES_DBNAME: cachet
    POSTGRES_DBUSER: cachet
    POSTGRES_DBPASS: postgres  
    POSTGRES_PASSWORD: password
    POSTGRES_CONFIG: |
      max_connections = 150
    POSTGRES_CRONS: |
      ##
    POSTGRES_REPLICATION_NETWORK:
  datastorage:
    size: 10Gi
    storageClassName: ""
  resources:
    requests:
      memory: 2Gi
    limits:
      memory: 2Gi
  livenessProbe:
    tcpSocket:
      port: 5432
    periodSeconds: 10
    timeoutSeconds: 3
  startupProbe:
    tcpSocket:
      port: 5432
    failureThreshold: 10
    periodSeconds: 5
    initialDelaySeconds: 5
    timeoutSeconds: 2
  nodeSelector: {}
  tolerations: []
  affinity: {}

postfix:
  fullnameOverride: ''
  dryrun: false
  serverName: status.eea.europa.eu
  mtpPass: ''
  mtpPort: ''
  mtpRelay: ''
  mtpUser: ''
  serviceName: 'postfix'
  mailtrap:
    httpenabled: false
    serviceType: NodePort
    ingress:
      enabled: false
      hostname: mailtrap.01dev.eea.europa.eu
      annotations:
        cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt
      certificate: mailtrap.01dev.eea.europa.eu-tls
  
cachet:
  serviceType: ClusterIP
  serviceName: cachet-svc
  hostname: status.01dev.eea.europa.eu
  resources:
    requests:
      memory: 2Gi
    limits:
      memory: 2Gi
  environment:
    DB_PREFIX: "chq_"
    APP_KEY: "base64:4t9MvAAFSKd7jIdCSAGV/NwXRTrafJeKUU9QqLrK+Zk="
    APP_LOG: "errorlog"
    DEBUG: "false"
    MAIL_NAME: "EEA Systems Status"
    MAIL_ADDRESS: "noreply@eea.europa.eu"
    TIMEOUT: "180"
    PHP_MAX_CHILDREN: "150"
    PHP_MAX_EXECUTION_TIME: "300"

  livenessProbe:
    tcpSocket:
      port: 8000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6

  startupProbe:
    tcpSocket:
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 12
  datastorage:
    size: 1Gi
    storageClassName: ""
    accessModes: "ReadWriteMany"



    
monitor:
  enabled: false
  environment:
    CACHET_TOKEN: ""
    CACHET_DEV: ""
    CONFIG: |
      checks:
        - name: "Cachet Web"
          type: http
          url: https://status-dev.eea.europa.eu
          component_id: 1
          interval: 60

        - name: "PostgreSQL"
          type: tcp
          host: postgres
          port: 5432
          component_id: 2
          interval: 60
  resources:
    requests:
      memory: 256Mi
    limits:
      memory: 256Mi
