apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-db
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: database

spec:
  replicas: 1
  serviceName: {{ .Release.Name }}-db
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      component: database
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        component: database
    spec:
      terminationGracePeriodSeconds: 10
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Release.Name }}-db
        ports:
        - name: database
          containerPort: 3306
          protocol: TCP
        image: mysql:8.0
        env:
        - name: MYSQL_DATABASE
          value: "{{ .Values.database.database }}"
        - name: MYSQL_PASSWORD
          value: "{{ .Values.database.password }}"
        - name: MYSQL_ROOT_PASSWORD
          value: "{{ .Values.database.rootpw }}"
        - name: MYSQL_USER
          value: "{{ .Values.database.username }}"

        volumeMounts:
        - mountPath: /var/lib/mysql
          name: {{ .Release.Name }}-database
        - mountPath: /shared
          name: {{ .Release.Name }}-database-shared

        livenessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 15
          periodSeconds: 20

        resources:
          {{- toYaml .Values.database.resources | nindent 10 }}

      restartPolicy: Always

      {{- with .Values.database.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.database.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.database.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-database
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.database.storage }}
  - metadata:
      name: {{ .Release.Name }}-database-shared
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.database.sharedStorage }}

