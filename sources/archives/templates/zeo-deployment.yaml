apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "appl.fullname" . }}-zeo
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: zeo
spec:
  replicas: {{ .Values.zeo.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      component: zeo
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        component: zeo
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}
      containers:
      - name: {{ .Release.Name }}-zeo
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        ports:
        - containerPort: 8081
          protocol: TCP
          name: zeoport
        args:
        - bin/zeoserver
        - fg
        env:
        - name: TZ
          value: "{{ .Values.timezone }}"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}

        # Restart if unresponsive for 10 minutes
        livenessProbe:
          tcpSocket:
            port: zeoport
          timeoutSeconds: 3
          initialDelaySeconds: 15
          failureThreshold: 3
          periodSeconds: 10

        # Wait up to 5 minutes to start
        startupProbe:
          tcpSocket:
            port: zeoport
          timeoutSeconds: 3
          failureThreshold: 30
          periodSeconds: 10

        volumeMounts:
        - mountPath: /var/local/groupware/var/zeoserver/filestorage
          name: {{ .Release.Name }}-filestorage
        - mountPath: /var/local/groupware/var/zeoserver/blobs
          name: {{ .Release.Name }}-blobstorage

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always

      volumes:
      - name: {{ .Release.Name }}-filestorage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-filestorage
      - name: {{ .Release.Name }}-blobstorage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-blobstorage
