apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-nginx-config-cm

data:
  404.html: |-
    <html>
    <head>
    <link rel="stylesheet" type="text/css" href="/errors/static_errors/css/style.css">
    </head>
    <body class="err404">
    <a href="https://www.eea.europa.eu" title="Go to homepage"><img class="eealogo" src="https://www.eea.europa.eu/about-us/documents/logos/eps_logos/eea-uk-white"></a>
    <div class="message">
    <h1>404 Not found!</h1>
    <h2>Ooops the page you were looking for has melted away...</h2>
    </div>
    </body>
    </html>
  
  50x.html: |-
    <html>
    <head>
    <link rel="stylesheet" type="text/css" href="/errors/static_errors/css/style.css">
    </head>
    <body class="err50x">
    <a href="https://www.eea.europa.eu" title="Go to homepage"><img class="eealogo" src="https://www.eea.europa.eu/about-us/documents/logos/eps_logos/eea-uk-white"></a>
    <div class="message">
    <h1>Our apologies, something went wrong!</h1>
    <h2>We have recorded this issue and we will do our best to solve it.</h2>
    </div>
    </body>
    </html>
  
  maintenance.html: |-
    <html>
    <head>
    <link rel="stylesheet" type="text/css" href="/errors/static_errors/css/style.css">
    </head>
    <body class="err50xmaintenance">
    <a href="http://www.eea.europa.eu" title="Go to homepage"><img class="eealogo" src="http://www.eea.europa.eu/about-us/documents/logos/eps_logos/eea-uk-white"></a>
    <div class="message">
    <h1>Server is undergoing maintenance</h1>
    <h2>We are doing our best to restore it as fast as possible.</h2>
    </div>
    </body>
    </html>

  style.css: |-
    @import url(http://fonts.googleapis.com/css?family=Open+Sans:100);
    .err404 {
      background:  url(/errors/static_errors/ice.gif) no-repeat center center fixed;
      background-size: cover;
    }

    .err50x {
      background:  url(/errors/static_errors/retrocars.gif) no-repeat center center fixed;
      background-size: cover;
    }

    .err50xmaintenance {
      background:  url(/errors/static_errors/containers.gif) no-repeat center center fixed;
      background-size: cover;
    }

    h1{
      font-size: 4em;
    }
    h2{
      font-size: 2em;
    }

    body {
      height: 100%;
      font-family: 'Open Sans', sans-serif;
    }

    img.eealogo {
        float:right;
        padding:1em;
        width: 30%;
    }

    .message {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translateX(-50%) translateY(-50%);
      color: rgba(255,255,255, 0.9);
      text-align: center;
    }

  nginx.conf: |-
    events {
        worker_connections 1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        sendfile on;
        keepalive_timeout 30;
        client_max_body_size 100M;

        upstream redmine {
            server redmine:3000;
        }

        server {
            listen 80;
            listen [::]:80;

            # HTTP/2 support
            http2 on;

            # Custom error pages
            error_page 404 /errors/404.html;
            error_page 500 501 504 505 /errors/50x.html;
            error_page 502 503 /errors/maintenance.html;

            # Serve error pages locally
            location /errors/ {
                root /usr/share/nginx/html;
                try_files $uri $uri/ =404;
            }

            # Security headers
            add_header X-Frame-Options SAMEORIGIN always;

            # Proxy timeout
            proxy_read_timeout 600;
            proxy_connect_timeout 600;
            proxy_send_timeout 600;

            # Set headers for backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Block search requests without specific cookie
            location ~* ^/search {
                if ($cookie__redmine_eea !~* "^1.*$") {
                    return 302 /;
                }
                proxy_pass http://redmine;
            }

            # Static files that should be served directly
            location = /google1c3b89acd75baccf.html {
                root /usr/share/nginx/html;
                try_files $uri =404;
            }

            location = /robots.txt {
                root /usr/share/nginx/html;
                try_files $uri =404;
            }

            # Default proxy to Redmine
            location / {
                proxy_pass http://redmine;
                proxy_intercept_errors on;
            }
        }
    }
    
