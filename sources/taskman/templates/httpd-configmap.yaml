apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-nginx-config-cm

data:
  nginx.conf: |-
    events {
        worker_connections 1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        sendfile on;
        keepalive_timeout 30;
        client_max_body_size 100M;

        # Docker networks
        set_real_ip_from 172.17.0.0/16;

        # Kubernetes pod/service networks
        set_real_ip_from 10.0.0.0/8;
        set_real_ip_from 172.16.0.0/12;
        set_real_ip_from 192.168.0.0/16;

        real_ip_header    X-Forwarded-For;
        real_ip_recursive on;

        # --- Log format (must be here in http {}) ---
        log_format graylog_strict
            '$remote_addr - $remote_user [$time_local] '
            '"$request" $status $body_bytes_sent '
            '"$http_referer" "$http_user_agent"';

        access_log /var/log/nginx/access.log graylog_strict;

        upstream redmine {
            server redmine:3000;
        }

        server {
            listen 80;
            listen [::]:80;

            # HTTP/2 support
            http2 on;

            # Custom error pages
            error_page 404 /errors/404.html;
            error_page 500 501 504 505 /errors/50x.html;
            error_page 502 503 /errors/maintenance.html;

            # Serve error pages locally
            location /errors/ {
                root /usr/share/nginx/html;
                try_files $uri $uri/ =404;
            }

            # Security headers
            add_header X-Frame-Options SAMEORIGIN always;

            # Proxy timeout
            proxy_read_timeout 600;
            proxy_connect_timeout 600;
            proxy_send_timeout 600;

            # Set headers for backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Block search requests without specific cookie
            location ~* ^/search {
                if ($cookie__redmine_eea !~* "^1.*$") {
                    return 302 /;
                }
                proxy_pass http://redmine;
            }

            # Static files that should be served directly
            location = /google1c3b89acd75baccf.html {
                root /usr/share/nginx/html;
                try_files $uri =404;
            }

            location = /robots.txt {
                root /usr/share/nginx/html;
                try_files $uri =404;
            }

            # Default proxy to Redmine
            location / {
                proxy_pass http://redmine;
                proxy_intercept_errors on;
            }
        }
    }
    
