Release "backend" has been upgraded. Happy Helming!
NAME: backend
LAST DEPLOYED: Tue Nov 12 18:42:39 2024
NAMESPACE: advisory-board
STATUS: pending-upgrade
REVISION: 11
TEST SUITE: None
USER-SUPPLIED VALUES:
debug:
  affinity: {}
  enabled: true
  environment: {}
  expose: false
  nodeSelector: {}
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    limits:
      memory: 3Gi
    requests:
      memory: 3Gi
  securityContext: {}
  serviceType: ClusterIP
  tolerations: null
fullnameOverride: ""
global:
  cattle:
    systemProjectId: ""
image:
  pullPolicy: Always
  repository: eeacms/advisory-board-backend
  tag: ""
imagePullSecrets: null
ingress:
  annotations:
    cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt
  certificate: key-01dev-letsencrypt
links:
  database: postgres-postgres.database
  memcached: postgres-memcached.database
nameOverride: ""
plone:
  annotations: {}
  autoscaling:
    enabled: false
    maxReplicas: 6
    minReplicas: 1
    targetMemoryUtilizationPercentage: 60
  database:
    POSTGRES_DB: advisory
    POSTGRES_PASSWORD: zope
    POSTGRES_USER: zope
  environment:
    CORS_ALLOW_ORIGIN: ""
    DEFAULT_ORGANISATIONS: ""
    DEFAULT_PUBLISHER: ESABCC
    DYNAMIC_BANNER_ENABLED: "No"
    GRAYLOG: logcentral.eea.europa.eu:12201
    SENTRY_DSN: ""
    SENTRY_ENVIRONMENT: 01dev
    STATIC_BANNER_ENABLED: "Yes"
  hostname: demo-climate-advisory-board.01dev.eea.europa.eu
  livenessProbe:
    failureThreshold: 6
    httpGet:
      path: /ok
      port: http
    initialDelaySeconds: 30
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    failureThreshold: 4
    httpGet:
      path: /ok
      port: http
    initialDelaySeconds: 60
    periodSeconds: 15
    successThreshold: 2
    timeoutSeconds: 10
  replicaCount: 1
  resources:
    limits:
      memory: 2Gi
    requests:
      memory: 2Gi
  serviceType: ClusterIP
  startupProbe:
    failureThreshold: 12
    httpGet:
      path: /ok
      port: http
    initialDelaySeconds: 10
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 10
postfix:
  affinity: {}
  dryrun: true
  enabled: ""
  fullnameOverride: ""
  global: {}
  image:
    pullPolicy: IfNotPresent
    repository: eeacms/postfix
    tag: ""
  imagePullSecrets: null
  mailtrap:
    httpenabled: true
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt
      certificate: abmailtrap.01dev.eea.europa.eu-tls
      enabled: true
      hostname: abmailtrap.01dev.eea.europa.eu
    serviceType: NodePort
  mtpPass: ""
  mtpPort: ""
  mtpRelay: ironports.eea.europa.eu
  mtpUser: ""
  nameOverride: ""
  nodeSelector: {}
  podAnnotations: {}
  podSecurityContext: {}
  replicaCount: 1
  resources: {}
  securityContext: {}
  serverName: plone.eea.europa.eu
  service:
    port: 25
    type: ClusterIP
  serviceAccount:
    annotations: {}
    create: false
    name: ""
  serviceName: postfix
  timezone: Europe/Copenhagen
  tolerations: null
serviceAccount:
  annotations: {}
  create: false
  name: ""
timezone: Europe/Copenhagen
varnish:
  affinity: {}
  backend: backend-plone
  environment:
    AUTOKILL_CRON: ""
    VARNISH_BERESP_GRACE: 60s
    VARNISH_BERESP_KEEP: 120s
    VARNISH_BERESP_TTL: 120s
    VARNISH_DNS_TTL: 20s
    VARNISH_GZIP_ENABLED: "true"
    VARNISH_GZIP_JSON_ENABLED: "true"
    VARNISH_SIZE: 2G
  livenessProbe:
    failureThreshold: 5
    httpGet:
      path: /ok
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10
  nodeSelector: {}
  port: 8080
  resources:
    limits:
      memory: 2Gi
    requests:
      memory: 2Gi
  serviceName: backend-varnish
  serviceType: ClusterIP
  startupProbe:
    failureThreshold: 12
    httpGet:
      path: /ok
      port: http
    initialDelaySeconds: 10
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 10
  tolerations: null

COMPUTED VALUES:
debug:
  affinity: {}
  enabled: true
  environment: {}
  expose: false
  nodeSelector: {}
  podAnnotations: {}
  podSecurityContext: {}
  resources:
    limits:
      memory: 3Gi
    requests:
      memory: 3Gi
  securityContext: {}
  serviceType: ClusterIP
fullnameOverride: ""
global:
  cattle:
    systemProjectId: ""
image:
  pullPolicy: Always
  repository: eeacms/advisory-board-backend
  tag: ""
ingress:
  annotations:
    cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt
  certificate: key-01dev-letsencrypt
links:
  database: postgres-postgres.database
  memcached: postgres-memcached.database
nameOverride: ""
plone:
  annotations: {}
  autoscaling:
    enabled: false
    maxReplicas: 6
    minReplicas: 1
    targetMemoryUtilizationPercentage: 60
  database:
    POSTGRES_DB: advisory
    POSTGRES_PASSWORD: zope
    POSTGRES_USER: zope
  environment:
    CORS_ALLOW_ORIGIN: ""
    DEFAULT_ORGANISATIONS: ""
    DEFAULT_PUBLISHER: ESABCC
    DYNAMIC_BANNER_ENABLED: "No"
    GRAYLOG: logcentral.eea.europa.eu:12201
    SENTRY_DSN: ""
    SENTRY_ENVIRONMENT: 01dev
    STATIC_BANNER_ENABLED: "Yes"
  hostname: demo-climate-advisory-board.01dev.eea.europa.eu
  livenessProbe:
    failureThreshold: 6
    httpGet:
      path: /ok
      port: http
    initialDelaySeconds: 30
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    failureThreshold: 4
    httpGet:
      path: /ok
      port: http
    initialDelaySeconds: 60
    periodSeconds: 15
    successThreshold: 2
    timeoutSeconds: 10
  replicaCount: 1
  resources:
    limits:
      memory: 2Gi
    requests:
      memory: 2Gi
  serviceType: ClusterIP
  startupProbe:
    failureThreshold: 12
    httpGet:
      path: /ok
      port: http
    initialDelaySeconds: 10
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 10
postfix:
  affinity: {}
  dryrun: true
  enabled: ""
  fullnameOverride: ""
  global:
    cattle:
      systemProjectId: ""
  image:
    pullPolicy: IfNotPresent
    repository: eeacms/postfix
    tag: ""
  imagePullSecrets: []
  livenessProbe:
    failureThreshold: 3
    initialDelaySeconds: 20
    periodSeconds: 20
    successThreshold: 1
    tcpSocket:
      port: 25
    timeoutSeconds: 3
  mailtrap:
    httpenabled: true
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt
      certificate: abmailtrap.01dev.eea.europa.eu-tls
      enabled: true
      hostname: abmailtrap.01dev.eea.europa.eu
    serviceType: NodePort
  mtpPass: ""
  mtpPort: ""
  mtpRelay: ironports.eea.europa.eu
  mtpUser: ""
  nameOverride: ""
  nodeSelector: {}
  podAnnotations: {}
  podSecurityContext: {}
  replicaCount: 1
  resources:
    limits:
      memory: 128Mi
    requests:
      memory: 128Mi
  securityContext: {}
  serverName: plone.eea.europa.eu
  service:
    port: 25
    type: ClusterIP
  serviceAccount:
    annotations: {}
    create: false
    name: ""
  serviceName: postfix
  startupProbe:
    failureThreshold: 15
    initialDelaySeconds: 15
    periodSeconds: 5
    successThreshold: 1
    tcpSocket:
      port: 25
    timeoutSeconds: 3
  timezone: Europe/Copenhagen
  tolerations: []
serviceAccount:
  annotations: {}
  create: false
  name: ""
timezone: Europe/Copenhagen
varnish:
  affinity: {}
  backend: backend-plone
  environment:
    AUTOKILL_CRON: ""
    VARNISH_BERESP_GRACE: 60s
    VARNISH_BERESP_KEEP: 120s
    VARNISH_BERESP_TTL: 120s
    VARNISH_DNS_TTL: 20s
    VARNISH_GZIP_ENABLED: "true"
    VARNISH_GZIP_JSON_ENABLED: "true"
    VARNISH_SIZE: 2G
  livenessProbe:
    failureThreshold: 5
    httpGet:
      path: /ok
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10
  nodeSelector: {}
  port: 8080
  resources:
    limits:
      memory: 2Gi
    requests:
      memory: 2Gi
  serviceName: backend-varnish
  serviceType: ClusterIP
  startupProbe:
    failureThreshold: 12
    httpGet:
      path: /ok
      port: http
    initialDelaySeconds: 10
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 10

HOOKS:
MANIFEST:
---
# Source: advisory-board-backend/charts/postfix/templates/ingress-netsecpol.yaml
# Allow NGINX to contact the mailtrap service.
#
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-postfix-allow-ingress
  labels:
    helm.sh/chart: postfix-3.0.2
    app.kubernetes.io/name: postfix
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "3.5-1.0"
    app.kubernetes.io/managed-by: Helm
    component: postfix

spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: postfix
      app.kubernetes.io/instance: backend
      component : postfix
  policyTypes:
  - Ingress

  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          app.kubernetes.io/name: rke2-ingress-nginx
---
# Source: advisory-board-backend/charts/postfix/templates/postfix-netsecpol.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-postfix
  labels:
    helm.sh/chart: postfix-3.0.2
    app.kubernetes.io/name: postfix
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "3.5-1.0"
    app.kubernetes.io/managed-by: Helm
    component: postfix

spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: postfix
      app.kubernetes.io/instance: backend
      component: postfix

  policyTypes:
  - Ingress


  ingress:
  - from:
    - podSelector: {}

    ports:
    - protocol: TCP
      port: 25
---
# Source: advisory-board-backend/charts/postfix/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postfix
  labels:
    helm.sh/chart: postfix-3.0.2
    app.kubernetes.io/name: postfix
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "3.5-1.0"
    app.kubernetes.io/managed-by: Helm

spec:
  type: NodePort
  ports:
    - port: 25
      targetPort: 25
      protocol: TCP
      name: smtp
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http

  selector:
    app.kubernetes.io/name: postfix
    app.kubernetes.io/instance: backend
---
# Source: advisory-board-backend/templates/debug-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: backend-debug
  labels:
    helm.sh/chart: advisory-board-backend-1.0.3
    app.kubernetes.io/name: advisory-board-backend
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "6.0.11-5"
    app.kubernetes.io/managed-by: Helm
    component: debug

spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: advisory-board-backend
    app.kubernetes.io/instance: backend
    component: debug
---
# Source: advisory-board-backend/templates/memcached-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "memcached"
spec:
  type: ExternalName
  externalName: "postgres-memcached.database.svc.cluster.local"
---
# Source: advisory-board-backend/templates/plone-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: backend-plone
  labels:
    helm.sh/chart: advisory-board-backend-1.0.3
    app.kubernetes.io/name: advisory-board-backend
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "6.0.11-5"
    app.kubernetes.io/managed-by: Helm
    component: plone

spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: advisory-board-backend
    app.kubernetes.io/instance: backend
    component: plone
---
# Source: advisory-board-backend/templates/postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "postgres"
spec:
  type: ExternalName
  externalName: "postgres-postgres.database.svc.cluster.local"
---
# Source: advisory-board-backend/templates/varnish-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: backend-varnish
  labels:
    helm.sh/chart: advisory-board-backend-1.0.3
    app.kubernetes.io/name: advisory-board-backend
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "6.0.11-5"
    app.kubernetes.io/managed-by: Helm
    component: varnish

spec:
  type: ClusterIP
  ports:
  - name: webui
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: advisory-board-backend
    app.kubernetes.io/instance: backend
    component: varnish
---
# Source: advisory-board-backend/charts/postfix/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-postfix
  labels:
    helm.sh/chart: postfix-3.0.2
    app.kubernetes.io/name: postfix
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "3.5-1.0"
    app.kubernetes.io/managed-by: Helm
    component: postfix

spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

  selector:
    matchLabels:
      app.kubernetes.io/name: postfix
      app.kubernetes.io/instance: backend
      component: postfix
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postfix
        app.kubernetes.io/instance: backend
        component: postfix
    spec:
      serviceAccountName: default
      securityContext:
        {}

      containers:
      - name: postfix
        image: eaudeweb/mailtrap:2.4

        ports:
        - containerPort: 25
          protocol: TCP
          name: smtp
        - containerPort: 80
          protocol: TCP
          name: http

        env:
        - name: MTP_HOST
          value: plone.eea.europa.eu
        - name: MTP_PASS
          value: ""
        - name: MTP_PORT
          value: ""
        - name: MTP_RELAY
          value: ironports.eea.europa.eu
        - name: MTP_USER
          value: 
        - name: TZ
          value: "Europe/Copenhagen"
        resources:
          limits:
            memory: 128Mi
          requests:
            memory: 128Mi
        securityContext:
          {}
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 20
          successThreshold: 1
          tcpSocket:
            port: 25
          timeoutSeconds: 3
        startupProbe:
          failureThreshold: 15
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 25
          timeoutSeconds: 3
      restartPolicy: Always
---
# Source: advisory-board-backend/templates/debug-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-dpl-debug
  labels:
    helm.sh/chart: advisory-board-backend-1.0.3
    app.kubernetes.io/name: advisory-board-backend
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "6.0.11-5"
    app.kubernetes.io/managed-by: Helm
    component: debug

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: advisory-board-backend
      app.kubernetes.io/instance: backend
      component: debug

  template:
    metadata:
      labels:
        app.kubernetes.io/name: advisory-board-backend
        app.kubernetes.io/instance: backend
        component: debug
    spec:
      serviceAccountName: default
      containers:
      - name: debug
        image: eeacms/advisory-board-backend-devel
        imagePullPolicy: Always
        args:
        - cat
        env:
        - name: SERVER_NAME
          value: "demo-climate-advisory-board.01dev.eea.europa.eu"
        - name: SENTRY_SITE
          value: "demo-climate-advisory-board.01dev.eea.europa.eu"
        - name: GRAYLOG_FACILITY
          value: "demo-climate-advisory-board.01dev.eea.europa.eu"
        - name: BACKEND_VERSION
          value: "6.0.11-5"
        - name: SENTRY_RELEASE
          value: "6.0.11-5"
        - name: TZ
          value: "Europe/Copenhagen"
        - name: RELSTORAGE_DSN
          value: "host='postgres' dbname='advisory' user='zope' password='zope'"
        - name: DEFAULT_PUBLISHER
          value: "ESABCC"
        - name: DYNAMIC_BANNER_ENABLED
          value: "No"
        - name: GRAYLOG
          value: "logcentral.eea.europa.eu:12201"
        - name: SENTRY_ENVIRONMENT
          value: "01dev"
        - name: STATIC_BANNER_ENABLED
          value: "Yes"

        ports:
        - containerPort: 8080

        stdin: true
        tty: true


        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 2Gi
      restartPolicy: Always
---
# Source: advisory-board-backend/templates/plone-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-dpl-plone
  labels:
    helm.sh/chart: advisory-board-backend-1.0.3
    app.kubernetes.io/name: advisory-board-backend
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "6.0.11-5"
    app.kubernetes.io/managed-by: Helm
    component: plone

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: advisory-board-backend
      app.kubernetes.io/instance: backend
      component: plone

  template:
    metadata:
      labels:
        app.kubernetes.io/name: advisory-board-backend
        app.kubernetes.io/instance: backend
        component: plone
    spec:
      serviceAccountName: default
      containers:
      - name: plone
        image: "eeacms/advisory-board-backend:6.0.11-5"
        env:
        - name: SERVER_NAME
          value: "demo-climate-advisory-board.01dev.eea.europa.eu"
        - name: SENTRY_SITE
          value: "demo-climate-advisory-board.01dev.eea.europa.eu"
        - name: GRAYLOG_FACILITY
          value: "demo-climate-advisory-board.01dev.eea.europa.eu"
        - name: BACKEND_VERSION
          value: "6.0.11-5"
        - name: SENTRY_RELEASE
          value: "6.0.11-5"
        - name: TZ
          value: "Europe/Copenhagen"
        - name: RELSTORAGE_DSN
          value: "host='postgres' dbname='advisory' user='zope' password='zope'"
        - name: DEFAULT_PUBLISHER
          value: "ESABCC"
        - name: DYNAMIC_BANNER_ENABLED
          value: "No"
        - name: GRAYLOG
          value: "logcentral.eea.europa.eu:12201"
        - name: SENTRY_ENVIRONMENT
          value: "01dev"
        - name: STATIC_BANNER_ENABLED
          value: "Yes"

        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /ok
            port: http
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: /ok
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /ok
            port: http
          initialDelaySeconds: 60
          periodSeconds: 15
          successThreshold: 2
          timeoutSeconds: 10
                   
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 2Gi
      restartPolicy: Always
---
# Source: advisory-board-backend/templates/varnish-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-dpl-varnish
  labels:
    helm.sh/chart: advisory-board-backend-1.0.3
    app.kubernetes.io/name: advisory-board-backend
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "6.0.11-5"
    app.kubernetes.io/managed-by: Helm
    component: varnish

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: advisory-board-backend
      app.kubernetes.io/instance: backend
      component: varnish
  template:
    metadata:
      labels:
        app.kubernetes.io/name: advisory-board-backend
        app.kubernetes.io/instance: backend
        component: varnish
    spec:
      serviceAccountName: default
      containers:
      - name: varnish
        image: eeacms/plone-varnish:7.5-1.0
        env:
        - name: TZ
          value: "Europe/Copenhagen"
        - name: VARNISH_BACKEND
          value: "backend-plone"
        - name: VARNISH_BACKEND_PORT
          value: "8080"
        - name: VARNISH_HTTP_PORT
          value: "8080"
        - name: VARNISH_BERESP_GRACE
          value: "60s"
        - name: VARNISH_BERESP_KEEP
          value: "120s"
        - name: VARNISH_BERESP_TTL
          value: "120s"
        - name: VARNISH_DNS_TTL
          value: "20s"
        - name: VARNISH_GZIP_ENABLED
          value: "true"
        - name: VARNISH_GZIP_JSON_ENABLED
          value: "true"
        - name: VARNISH_SIZE
          value: "2G"

        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /ok
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: /ok
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 10

        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 2Gi
      restartPolicy: Always
---
# Source: advisory-board-backend/charts/postfix/templates/mailtrap-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-postfix-mailtrap
  labels:
    helm.sh/chart: postfix-3.0.2
    app.kubernetes.io/name: postfix
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "3.5-1.0"
    app.kubernetes.io/managed-by: Helm
    component: postfix
  annotations:
    cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt

spec:
  ingressClassName: nginx
  rules:
  - host: abmailtrap.01dev.eea.europa.eu
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: postfix
            port:
              number: 80
  tls:
  - hosts:
    - abmailtrap.01dev.eea.europa.eu
    secretName: abmailtrap.01dev.eea.europa.eu-tls
---
# Source: advisory-board-backend/templates/admin-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: advisory-board-admin
  labels:
    helm.sh/chart: advisory-board-backend-1.0.3
    app.kubernetes.io/name: advisory-board-backend
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "6.0.11-5"
    app.kubernetes.io/managed-by: Helm
    component: advisory-board-admin
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /VirtualHostBase/https/demo-climate-advisory-board.01dev.eea.europa.eu:443/advisory/VirtualHostRoot/_vh_admin/$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt

spec:
  ingressClassName: nginx
  rules:
  - host: demo-climate-advisory-board.01dev.eea.europa.eu
    http:
      paths:
      - path: /admin(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend-varnish
            port:
              number: 8080
      - path: /google85dc6cec8f1329e5.html(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend-varnish
            port:
              number: 8080
      - path: /.well-known/microsoft-identity-association.json(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend-varnish
            port:
              number: 8080
  tls:
  - hosts:
    - demo-climate-advisory-board.01dev.eea.europa.eu
    secretName: key-01dev-letsencrypt
---
# Source: advisory-board-backend/templates/api-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: advisory-board-api
  labels:
    helm.sh/chart: advisory-board-backend-1.0.3
    app.kubernetes.io/name: advisory-board-backend
    app.kubernetes.io/instance: backend
    app.kubernetes.io/version: "6.0.11-5"
    app.kubernetes.io/managed-by: Helm
    component: advisory-board-api
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /VirtualHostBase/https/demo-climate-advisory-board.01dev.eea.europa.eu:443/advisory/++api++/VirtualHostRoot/$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    cert-manager.io/cluster-issuer: 01dev-eea-letsencrypt

spec:
  ingressClassName: nginx
  rules:
  - host: demo-climate-advisory-board.01dev.eea.europa.eu
    http:
      paths:
      - path: /\+\+api\+\+(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend-varnish
            port:
              number: 8080
  tls:
  - hosts:
    - demo-climate-advisory-board.01dev.eea.europa.eu
    secretName: key-01dev-letsencrypt

